// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"go-web-template/modules/controller"
	"go-web-template/modules/engine"
	"go-web-template/modules/middleware"
	"go-web-template/modules/orm/mysql"
	"go-web-template/modules/rabbitmq"
	"go-web-template/modules/repository"
	"go-web-template/modules/service"
	"go-web-template/modules/util/check"
	"go-web-template/modules/util/crypt"
	"go-web-template/modules/util/jwt"
)

import (
	_ "go-web-template/docs"
)

// Injectors from injector.go:

func InitGinManager() *engine.GinManager {
	mySQLGorm := mysql.MySQLGormProvider()
	jwtManager := jwt.JwtManagerProvider()
	middlewareMiddleware := middleware.MiddlewareProvider(jwtManager)
	passwordCrypt := crypt.PasswordCryptProvider()
	userRepository := repository.UserRepositoryProvider(mySQLGorm)
	userService := service.UserServiceProvider(passwordCrypt, jwtManager, userRepository)
	userController := controller.UserControllerProvider(userService)
	contentService := service.ContentServiceProvider()
	contentController := controller.ContentControllerProvider(contentService)
	rabbitMQManager := rabbitmq.RabbitMQManagerProvider()
	checker := check.CheckerProvider()
	rabbitMQService := service.RabbitMQServiceProvider(rabbitMQManager, checker)
	rabbitMQController := controller.RabbitMQControllerProvider(rabbitMQService)
	ginManager := engine.GinManagerProvider(mySQLGorm, middlewareMiddleware, userController, contentController, rabbitMQController)
	return ginManager
}
